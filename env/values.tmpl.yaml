cluster:
  ingress:
    domain: {{ .Requirements.ingress.domain }}
    namespaceSubDomain: {{ .Requirements.ingress.namespaceSubDomain | default "-jx." }}
    tls:
{{- if .Requirements.ingress.tls.enabled }}
      enabled: true
{{- if .Requirements.ingress.tls.production }}
      production: true
{{- end }}
{{- end }}

# controls the dex ingress
  sso:
    enabled: true

datadog:
  apiKey: vault:arcalos-prod-mgmt/monitoring/datadog-app:apiKey
  appKey: vault:arcalos-prod-mgmt/monitoring/datadog-app:appKey

tekton:
{{- if eq .Requirements.webhook "prow" }}
  enabled: true
{{- else if eq .Requirements.webhook "lighthouse" }}
  enabled: true
{{- else }}
  enabled: false
{{- end }}

# Use cert-manager 0.11 CRDs/APIs with Dex
dex:
  certs:
    newApi: true

gitops:
  owner: {{ .Requirements.cluster.environmentGitOwner }}

expose:
  enabled: false

arcalosAlpha:
  pipelineGithubUser: vault:arcalos-prod-mgmt/aps-alpha/arcalos:pipeline-github-user
  pipelineGithubToken: vault:arcalos-prod-mgmt/aps-alpha/arcalos:pipeline-github-token
  pipelineGithubEmail: vault:arcalos-prod-mgmt/aps-alpha/arcalos:pipeline-github-email
  gitOwner: vault:arcalos-prod-mgmt/aps-alpha/arcalos:git-owner
  ciSA: vault:arcalos-prod-mgmt/aps-alpha/arcalos-prod-sa:json
  segmentWriteKey: vault:arcalos-prod-mgmt/monitoring/segment:write-key
  runBootSchedule: "0 * * * *"
  domainIssuerPassword: vault:arcalos-prod-mgmt/aps-alpha/arcalos:domain-issuer-password # pragma: allowlist secret
  domainIssuerUsername: vault:arcalos-prod-mgmt/aps-alpha/arcalos:domain-issuer-username
  domainIssuerUrl: "https://jx-tenant-service{{ .Requirements.ingress.namespaceSubDomain }}{{ .Requirements.ingress.domain }}"

basicAuth: "{{ .Parameters.adminUser.username }}:{SHA}{{ .Parameters.tenantServiceBasicAuth | hashPassword }}"
